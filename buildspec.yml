version: 0.1
environment_variables:
  plaintext:
    APPNAME: "civil-appeal"
phases:
  install:
    commands:
      - apt-get update -y
      - apt-get install -y software-properties-common
      - add-apt-repository -y ppa:openjdk-r/ppa
      - curl -sL https://deb.nodesource.com/setup_10.x | bash -
      - apt-get update -y
      - apt-get install -y ant openjdk-8-jdk-headless build-essential nodejs
      - update-alternatives --set java /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java 
      - update-alternatives --set javac /usr/lib/jvm/java-8-openjdk-amd64/bin/javac
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region eu-west-2)
  build:
    commands:
      - aws codepipeline get-pipeline-execution --pipeline-name `echo $CODEBUILD_INITIATOR | cut -f 2 -d '/'` --pipeline-execution-id `aws codepipeline get-pipeline-state --name $(echo $CODEBUILD_INITIATOR | cut -f 2 -d '/') --query "stageStates[?actionStates[0].actionName=='DockerBuild'].latestExecution.pipelineExecutionId" --output text` --query "pipelineExecution.artifactRevisions[?name=='Application'].revisionId" --output text | cut -c 1-7 | xargs echo -n > BUILD_TAG.txt
      - echo -n -`date "+%Y%m%d%H%M"` >> BUILD_TAG.txt
      - echo Created build tag `cat BUILD_TAG.txt`
      - echo Build started on `date`
      - echo Installing node dependencies...
      - npm install
      - echo Building the WAR file image...
      - ant
      - echo Building the Docker image...
      - docker build -t $APPNAME:`cat BUILD_TAG.txt` .
      - docker tag $APPNAME:`cat BUILD_TAG.txt` 613903586696.dkr.ecr.eu-west-2.amazonaws.com/tp-java/$APPNAME:`cat BUILD_TAG.txt`
  post_build:
    commands:
      - echo Using build tag `cat BUILD_TAG.txt`
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push 613903586696.dkr.ecr.eu-west-2.amazonaws.com/tp-java/$APPNAME:`cat BUILD_TAG.txt`
artifacts:
  files:
    - BUILD_TAG.txt
    
